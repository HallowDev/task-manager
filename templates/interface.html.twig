{% extends 'base.html.twig' %}

{% block javascripts %}
    <script>
        let idUpdate = null;

        // fonction utilisée pour envoyer des requêtes ajax
        function sendRequest(method, url, data, callback) {
            let xhr = new XMLHttpRequest();
            xhr.open(method, url, true);
            xhr.setRequestHeader("Content-Type", "application/json");

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        callback(xhr.responseText ? JSON.parse(xhr.responseText) : null);
                    } else {
                        console.error(`Erreur ${xhr.status}: ${xhr.statusText}`);
                    }
                }
            };

            xhr.send(data ? JSON.stringify(data) : null);
        }

        // fonction pour vider les champs du formulaire
        function clearForm() {
            document.getElementById("title").value = "";
            document.getElementById("description").value = "";
        }

        // fonction pour mettre à jour une tâche
        function updateForm(id) {
            idUpdate = id;
            sendRequest("GET", `/api/findTask/${id}/`, null, function (data) {
                document.getElementById("title").value = data.title;
                document.getElementById("description").value = data.description;

                document.getElementById("add").textContent = "Update";
                document.getElementById("add").onclick = updateTask;
            });
        }

        // fonction pour appeler la fonction qui met à jour les données d'une tâche
        function updateTask(event) {
            event.preventDefault();
            const title = document.getElementById('title').value;
            const description = document.getElementById('description').value;

            sendRequest("PUT", `/api/updateTask/${idUpdate}/`, { title, description }, function () {
                document.getElementById("add").textContent = "Add";
                document.getElementById("add").onclick = createTask;
                clearForm();
                getAllTasks();
            });
        }

        // fonction pour appeler la fonction qui met à jour le statut d'une tâche
        function finishTask(id) {
            sendRequest("PUT", `/api/finishTask/${id}/`, null, getAllTasks);
        }

        // fonction pour appeler la fonction qui supprime les tâches
        function deleteTask(id) {
            if (confirm("Êtes-vous sûr de vouloir supprimer cette tâche ?")) {
                sendRequest("GET", `/api/deleteTask/${id}/`, null, getAllTasks);
            }
        }

        // fonction pour appeler la fonction qui récupère toutes les tâches
        function getAllTasks() {
            sendRequest("GET", "/api/getAllTasks", null, function (data) {
                const list = document.getElementById("items-list");
                list.innerHTML = "";

                data.forEach(item => {
                    const li = document.createElement("li");
                    li.textContent = `${item.title} (${item.description}) - ${item.status ? "Active" : "Finished"}`;

                    const br = document.createElement('br');
                    li.appendChild(br);

                    const update = document.createElement("button");
                    update.textContent = "Update";
                    update.className = "btn btn-primary mx-1";
                    update.onclick = () => updateForm(item.id);

                    const end = document.createElement("button");
                    end.textContent = "End task";
                    end.className = "btn btn-success mx-1";
                    end.onclick = () => finishTask(item.id);

                    const remove = document.createElement("button");
                    remove.textContent = "Remove";
                    remove.className = "btn btn-danger mx-1";
                    remove.onclick = () => deleteTask(item.id);

                    li.append(update, end, remove);
                    list.appendChild(li);
                });
            });
        }

        // fonction pour appeler la fonction qui créé les tâches
        function createTask(event) {
            event.preventDefault();
            const title = document.getElementById("title").value;
            const description = document.getElementById("description").value;

            if (!title || !description) {
                alert("Title or description must be filled out");
                return;
            }

            sendRequest("POST", "/api/createTask", { title, description }, function () {
                clearForm();
                getAllTasks();
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("taskForm").addEventListener("submit", createTask);
            getAllTasks();
        });

    </script>
{% endblock %}

{% block body %}
    <div class="container mt-5 w-25">
        <h1 class="text-center mb-4">Task Manager</h1>
        
        <div class="card p-4 shadow-sm">
            <form id="taskForm">
                <div class="mb-3">
                    <input type="text" id="title" class="form-control" placeholder="Nom de la tâche" required>
                </div>
                <div class="mb-3">
                    <textarea id="description" class="form-control" rows="3" placeholder="Description" required></textarea>
                </div>
                <button id="add" class="btn btn-primary w-100">Add</button>
            </form>
        </div>
        
        <h2 class="mt-5">Tasks list</h2>
        <ul id="items-list" class="list-group mt-3"></ul>
    </div>
{% endblock %}

