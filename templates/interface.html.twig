{% extends 'base.html.twig' %}

{% block javascripts %}
    <script>

        let idUpdate = null;
        let updateButton = document.createElement("button");
        updateButton.id = "update";
        updateButton.className = "btn btn-primary w-40";
        updateButton.textContent = "Update";
        updateButton.onclick = updateTask;
        let addButton = document.createElement("button");
        addButton.id = "add";
        addButton.className = "btn btn-primary w-40";
        addButton.textContent = "Add";
        addButton.onclick = createTask;

        async function clearForm() {
            let input = document.getElementById("title");
                let textarea = document.getElementById("description");
                input.value = "";
                textarea.value = "";
        }

        async function updateForm(id) {
            idUpdate = id
            try {
                const response = await fetch(`/api/findTask/${id}/`, {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' },
                });

                if (!response.ok) {
                    throw new Error(`Erreur: ${response.status}`);
                }

                const data = await response.json();

                document.getElementById("title").value = data.title;
                document.getElementById("description").value = data.description;

                document.getElementById("add").remove();
                console.log(updateButton)
                document.getElementById("buttons").appendChild(updateButton);

                getAllTasks();
            } catch (error) {
                console.error("Erreur lors de la mise à jour :", error);
            }
        }

        // fonction pour appeler la fonction qui met à jour les données d'une tâche
        async function updateTask() {
            const title = document.getElementById('title').value;
            const description = document.getElementById('description').value;
            try {
                const response = await fetch(`/api/updateTask/${idUpdate}/`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ title, description })
                });

                if (!response.ok) {
                    throw new Error(`Erreur: ${response.status}`);
                }

                document.getElementById("update").remove();
                document.getElementById("buttons").appendChild(addButton);
                clearForm()
                getAllTasks();
            } catch (error) {
                console.error("Erreur lors de la mise à jour :", error);
            }
        }

        // fonction pour appeler la fonction qui met à jour le statut d'une tâche
        async function finishTask(id) {
            try {
                const response = await fetch(`/api/finishTask/${id}/`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                });

                if (!response.ok) {
                    throw new Error(`Erreur: ${response.status}`);
                }

                getAllTasks();
            } catch (error) {
                console.error("Erreur lors de la mise à jour :", error);
            }
        }

        // fonction pour appeler la fonction qui supprime les tâches
        async function deleteTask(id) {
            let confirmation = window.confirm("Êtes-vous sûr de vouloir supprimer cette tâche ?");
    
            if (confirmation) {
                try {
                const response = await fetch(`/api/deleteTask/${id}/`, {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' },
                });

                if (!response.ok) {
                    throw new Error(`Erreur: ${response.status}`);
                }
                getAllTasks();
                } catch (error) {
                    console.error("Erreur lors de la mise à jour :", error);
                }
            } else {
                console.log("Action annulée.");
            }
        }
        
        // fonction pour appeler la fonction qui récupère toutes les tâches
        async function getAllTasks() {
            const response = await fetch('/api/getAllTasks');
            const data = await response.json();
            console.log(data)
            const list = document.getElementById('items-list');
            list.innerHTML = '';

            data.forEach(item => {
                const li = document.createElement('li');
                if (item.status) {
                    var status = "Active"
                } else {
                    var status = "Finished"
                }
                li.textContent = `${item.title} (${item.description}) - ${status}`;

                const br = document.createElement('br');
                li.appendChild(br);

                const update = document.createElement('button');
                const end = document.createElement('button');
                const remove = document.createElement('button');

                update.textContent = "Update";
                update.className = "btn btn-primary";
                update.onclick = function() { updateForm(item.id) };

                end.textContent = "End task";
                end.style.marginLeft = "10px";
                end.className = "btn btn-success";
                end.onclick = function() { finishTask(item.id) };

                remove.textContent = "Remove";
                remove.style.marginLeft = "10px";
                remove.className = "btn btn-danger";
                remove.onclick = function() { deleteTask(item.id) };

                li.appendChild(update);
                li.appendChild(end);
                li.appendChild(remove);

                list.appendChild(li);
            });
        }

        // fonction pour appeler la fonction qui créé les tâches
        async function createTask() {
            const title = document.getElementById('title').value;
            const description = document.getElementById('description').value;

            if (!title || !description) {
                alert("Title or description must be filled out");
                return false;
            }

            await fetch('/api/createTask', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ title, description })
            });
            clearForm();
            getAllTasks();
        }

        window.onload = function() {
            clearForm();
            getAllTasks();
        };

    </script>
{% endblock %}

{% block body %}
    <div class="container mt-5 w-25">
        <h1 class="text-center mb-4">Task Manager</h1>
        
        <div class="card p-4 shadow-sm">
            <div class="mb-3">
                <input type="text" id="title" class="form-control" placeholder="Nom de la tâche">
            </div>
            <div class="mb-3">
                <textarea type="text" id="description" class="form-control" rows="3" placeholder="Description"></textarea>
            </div>
            <div id="buttons" class="w-100">
                <button id="add" class="btn btn-primary w-40" onclick="createTask()">Add</button>
            </div>
        </div>
        
        <h2 class="mt-5">Tasks list</h2>
        <div id="items-list" class="list-group mt-3"></div>
{% endblock %}
